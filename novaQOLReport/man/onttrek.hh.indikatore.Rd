% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/onttrek.hh.indikatore.R
\name{onttrek.hh.indikatore}
\alias{onttrek.hh.indikatore}
\title{Extract HH Indicators}
\usage{
onttrek.hh.indikatore(hh = qol, workpop.min = 14, workpop.max = 65,
  imm.max = 15, outfile = "/Users/christiaanpauw/tmp/a.xlsx",
  write = FALSE, bag.weight = 50, debug = FALSE, verbose = FALSE,
  demographics_member_age = "demographics_member_age",
  demographics_member_sex = "demographics_member_sex",
  personal_education_completed = "personal_education_completed",
  noschoolvar = "No school education completed",
  respondent_info_address_householdsonstand = "respondent_info_address_householdsonstand",
  respondent_household_membernumber = "respondent_household_membernumber",
  sol_energy_electricity_failure_90 = "sol_energy_electricity_failure_90",
  swb_satisfaction_general = "swb_satisfaction_general",
  swb_satisfaction_work = "swb_satisfaction_work",
  sol_income_household_total = "sol_income_household_total",
  sol_household_health_general = "sol_household_health_general",
  swb_satisfaction_food = "swb_satisfaction_food",
  swb_satisfaction_discovery = "swb_satisfaction_discovery",
  swb_satisfaction_water = "swb_satisfaction_water",
  swb_satisfaction_waste = "swb_satisfaction_waste",
  swb_satisfaction_air = "swb_satisfaction_air",
  swb_satisfaction_house = "swb_satisfaction_house",
  sol_water_source_main = "sol_water_source_main",
  sol_water_available_30days = "sol_water_available_30days",
  sol_sanitation_toilet_type = "sol_sanitation_toilet_type",
  sol_sanitation_toilet_flushsystemactive = "sol_sanitation_toilet_flushsystemactive",
  sol_waste_household_collection = "sol_waste_household_collection",
  sol_waste_household_collectionfailure = "sol_waste_household_collectionfailure",
  sol_energy_cooking_all_wood = "sol_energy_cooking_all_wood",
  sol_energy_cooking_all_coal = "sol_energy_cooking_all_coal",
  sol_energy_cooking_all_cattle.manure...animal.dung = "sol_energy_cooking_all_cattle.manure...animal.dung",
  sol_energy_cooking_all_paraffin = "sol_energy_cooking_all_paraffin",
  sol_energy_cooking_maincarrier = "sol_energy_cooking_maincarrier",
  sol_energy_heating_carrier = "sol_energy_heating_carrier",
  sol_energy_heating_all_wood = "sol_energy_heating_all_wood",
  sol_energy_heating_all_coal = "sol_energy_heating_all_coal",
  sol_energy_heating_all_cattle.manure...animal.dung = "sol_energy_heating_all_cattle.manure...animal.dung",
  sol_energy_heating_all_paraffin = "sol_energy_heating_all_paraffin",
  poverty.income.cat = "poverty.income.cat",
  low.pov.lab = "Lower bound poverty line -",
  sol_safety_perception = "sol_safety_perception",
  sol_safety_crime_victim = "sol_safety_crime_victim",
  sol_safety_crime_victimlist_street.robbery = "sol_safety_crime_victimlist_street.robbery",
  sol_safety_crime_victimlist_home.robbery = "sol_safety_crime_victimlist_home.robbery",
  sol_safety_crime_victimlist_home.burglary..excluding.home.robbery = "sol_safety_crime_victimlist_home.burglary..excluding.home.robbery.",
  body_symptoms_twelvemonth_list_no.complaints.at.all = "body_symptoms_twelvemonth_list_no.complaints.at.all",
  body_symptoms_twelvemonth_list_coughing.sputum.but.no.weight.loss.or.fever.or.night.sweats = "body_symptoms_twelvemonth_list_coughing.sputum.but.no.weight.loss.or.fever.or.night.sweats",
  body_symptoms_twelvemonth_list_three.plus.l.s.p.d = "body_symptoms_twelvemonth_list_three.plus.l.s.p.d",
  body_symptoms_year_list_painful..swollen.and.stiff.joints = "body_symptoms_year_list_painful..swollen.and.stiff.joints",
  body_disease_treatment_asthma = "body_disease_treatment_asthma",
  body_disease_prevalence_cancer = "body_disease_prevalence_cancer",
  body_disease_treatment_cancer = "body_disease_treatment_cancer",
  demographics_member_parent_motheralive = "demographics_member_parent_motheralive",
  matriclist = paste(levels(persoon[, personal_education_completed])[c(1, 2,
  3, 8, 18, 19, 20:22)], collapse = "|"), unempvar = "Unemployed, looking",
  unempvar.a = "Unemployed, will accept",
  asthmalike = "body_symptoms_twelvemonth_list_wheezing.and.tight.chest.at.night.or.after.exercise",
  body_nurtition_fruitveg_frequency = "body_nurtition_fruitveg_frequency",
  body_nutrition_protein_frequency = "body_nutrition_protein_frequency",
  house_insulation_ceiling = "house_insulation_ceiling",
  house_type = "house_type",
  inf.house.val = "Caravan|tent|Other|Shack|backyard", orden = FALSE)
}
\arguments{
\item{hh}{Data frame containing survey information}

\item{workpop.min}{The minimum working age for a member as Numeric}

\item{workpop.max}{The maximum working age for a member as Numeric}

\item{imm.max}{The age at which someone is "mature"?? (I have no idea what this var is)}

\item{outfile}{Character vector containing the output directory for writing a xlsx file}

\item{write}{Logical whether to write an xlsx file or not}

\item{bag.weight}{Numeric indicating the bag weight attributed to each person}

\item{debug}{Logical that initializes global environment assignments for debugging process}

\item{verbose}{Logical to display function messages}

\item{orden}{Logical that prescribes a numerical order (Not actually used in this function)}
}
\description{
Extract the final QOL indicators out of the datasets possible per town. Used for procuring
the total tons of coal and wood burned at homes per annum
}
\details{
Further arguments are all character vectors referring to survey variables contained in the QOL
dataset
}

